paths:
  api/products:
    get:
      summary: "Obtener todos los productos"
      security:
        - jwtAuth: []
      tags:
        - "Productos"
      responses:
        200:
          description: "Lista de todos los productos"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        401:
          description: "No autorizado, falta token JWT o es inválido"
        403:
          description: "Acceso prohibido, solo administradores"
    
    post:
      summary: "Crear un nuevo producto"
      security:
        - jwtAuth: []
      tags:
        - "Productos"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        201:
          description: "Producto creado exitosamente"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        401:
          description: "No autorizado, falta token JWT o es inválido"
        403:
          description: "Acceso prohibido, solo administradores"
  api/products/{id}:
    put:
      summary: "Actualizar un producto existente"
      security:
        - jwtAuth: []
      tags:
        - "Productos"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: "ID del producto"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: "Producto actualizado exitosamente"
        401:
          description: "No autorizado, falta token JWT o es inválido"
        403:
          description: "Acceso prohibido, solo administradores"
        404:
          description: "Producto no encontrado"

    delete:
      summary: "Eliminar un producto"
      security:
        - jwtAuth: []
      tags:
        - "Productos"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: "ID del producto"
      responses:
        200:
          description: "Producto eliminado exitosamente"
        401:
          description: "No autorizado, falta token JWT o es inválido"
        403:
          description: "Acceso prohibido, solo administradores"
        404:
          description: "Producto no encontrado"
  /api/carts:
    get:
      summary: Obtiene una lista de todos los carritos
      description: Obtiene una lista de todos los carritos. Requiere autenticación y autorización de administrador.
      tags:
        - Cart
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de carritos obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
        '500':
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
    post:
      summary: Crea un nuevo carrito
      description: Crea un nuevo carrito. Requiere autenticación y autorización de administrador.
      tags:
        - Cart
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: Carrito creado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  cartId:
                    type: string
        '400':
          description: Solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{id}:
    get:
      summary: Obtiene un carrito específico por su ID
      description: Obtiene un carrito específico por su ID. Requiere autenticación.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del carrito a obtener
          schema:
            type: string
      responses:
        '200':
          description: Carrito obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Actualiza un carrito específico
      description: Actualiza un carrito específico. Requiere autenticación y autorización de administrador.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del carrito a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
      responses:
        '200':
          description: Carrito actualizado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        '404':
          description: Error al actualizar el carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Elimina un carrito específico por su ID
      description: Elimina un carrito específico por su ID. Requiere autenticación y autorización de administrador.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del carrito a eliminar
          schema:
            type: string
      responses:
        '200':
          description: Carrito eliminado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Error al eliminar el carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/clear/{id}:
    delete:
      summary: Limpia todos los productos de un carrito
      description: Elimina todos los productos del carrito especificado. Requiere autenticación.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID del carrito a limpiar
          schema:
            type: string
      responses:
        '200':
          description: Carrito limpiado correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Error al limpiar el carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/products/{pId}:
    post:
      summary: Agrega un producto al carrito del usuario
      description: Agrega un producto al carrito del usuario. Requiere autenticación.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: pId
          in: path
          required: true
          description: ID del producto a agregar
          schema:
            type: string
      responses:
        '200':
          description: Producto agregado al carrito correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  cart:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: Error al agregar el producto al carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/carts/{cId}/products/{pId}:
    put:
      summary: Actualiza la cantidad de un producto en el carrito
      description: Actualiza la cantidad de un producto específico en el carrito. Requiere autenticación.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: cId
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
        - name: pId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        '200':
          description: Cantidad del producto actualizada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  cart:
                    $ref: '#/components/schemas/Cart'
        '404':
          description: Error al actualizar la cantidad del producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Elimina un producto del carrito
      description: Elimina un producto del carrito especificado. Requiere autenticación.
      tags:
        - Cart
      security:
        - bearerAuth: []
      parameters:
        - name: cId
          in: path
          required: true
          description: ID del carrito
          schema:
            type: string
        - name: pId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      responses:
        '200':
          description: Producto eliminado del carrito correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Error al eliminar el producto del carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
